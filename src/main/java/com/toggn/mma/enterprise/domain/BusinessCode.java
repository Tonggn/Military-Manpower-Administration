package com.toggn.mma.enterprise.domain;

import lombok.Getter;
import lombok.RequiredArgsConstructor;

import java.util.Arrays;

@Getter
@RequiredArgsConstructor
public enum BusinessCode {

    CODE_NOT_EXISTS("-1", "미기재"),
    CODE_10000("10000", "산업체"),
    CODE_11000("11000", "기간산업체"),
    CODE_11100("11100", "공업"),
    CODE_11101("11101", "철강"),
    CODE_11102("11102", "기계"),
    CODE_11103("11103", "전기"),
    CODE_11104("11104", "전자"),
    CODE_11105("11105", "화학"),
    CODE_11106("11106", "섬유"),
    CODE_11107("11107", "신발"),
    CODE_11108("11108", "시멘요업"),
    CODE_11109("11109", "생활용품"),
    CODE_11110("11110", "통신기기"),
    CODE_11111("11111", "정보처리"),
    CODE_11112("11112", "게임S/W"),
    CODE_11113("11113", "영상게임"),
    CODE_11114("11114", "의료의약"),
    CODE_11115("11115", "식음료"),
    CODE_11116("11116", "농산물가공"),
    CODE_11117("11117", "수산물가공"),
    CODE_11118("11118", "임산물가공"),
    CODE_11119("11119", "동물약품"),
    CODE_11120("11120", "애니메이션"),
    CODE_11200("11200", "광업"),
    CODE_11201("11201", "석탄채굴"),
    CODE_11202("11202", "일반광물채굴"),
    CODE_11203("11203", "선광제련"),
    CODE_11300("11300", "에너지"),
    CODE_11301("11301", "에너지"),
    CODE_11400("11400", "건설"),
    CODE_11401("11401", "국내"),
    CODE_11402("11402", "국외"),
    CODE_11500("11500", "해운"),
    CODE_11501("11501", "내항화물"),
    CODE_11502("11502", "외항화물"),
    CODE_11503("11503", "내항선박관리"),
    CODE_11504("11504", "외항선박관리"),
    CODE_11600("11600", "수산"),
    CODE_11601("11601", "근해"),
    CODE_11602("11602", "원양"),
    CODE_12000("12000", "방위산업체"),
    CODE_12100("12100", "방위산업체"),
    CODE_12101("12101", "검사기관"),
    CODE_12102("12102", "군공창"),
    CODE_12103("12103", "군정비부대"),
    CODE_12104("12104", "군조달기관"),
    CODE_12105("12105", "민영방산"),
    CODE_13000("13000", "농어업분야"),
    CODE_13100("13100", "농업분야"),
    CODE_13101("13101", "후계농업민"),
    CODE_13102("13102", "농기계수리"),
    CODE_13103("13103", "농기계운전"),
    CODE_13200("13200", "어업분야"),
    CODE_13201("13201", "어민후계자"),
    CODE_14000("14000", "기능특기자"),
    CODE_14100("14100", "기능특기자"),
    CODE_14101("14101", "기능특기자"),
    CODE_20000("20000", "연구기관"),
    CODE_21000("21000", "자연계연구기관"),
    CODE_21100("21100", "특정연구"),
    CODE_21101("21101", "과기원"),
    CODE_21102("21102", "과기원부설연구소"),
    CODE_21103("21103", "특정연구소"),
    CODE_21200("21200", "정부출연"),
    CODE_21201("21201", "정부출연연구소"),
    CODE_21202("21202", "정부투자연구소"),
    CODE_21300("21300", "과학진흥"),
    CODE_21301("21301", "과학진흥연구소"),
    CODE_21400("21400", "국공립 등"),
    CODE_21401("21401", "국가기관 등 연구소"),
    CODE_21402("21402", "지역혁신센터연구소"),
    CODE_21500("21500", "기업부설 등"),
    CODE_21501("21501", "대기업부설연구소"),
    CODE_21502("21502", "중소기업부설연구소"),
    CODE_21503("21503", "벤처기업부설연구소"),
    CODE_21504("21504", "중견기업부설연구소"),
    CODE_21505("21505", "연구개발서비스업연구소"),
    CODE_21600("21600", "공공법인"),
    CODE_21601("21601", "공공법인연구소"),
    CODE_22000("22000", "인문사회연구기관"),
    CODE_22100("22100", "인문사회연구기관"),
    CODE_22101("22101", "인문사회연구기관"),
    CODE_23000("23000", "대학연구기관"),
    CODE_23100("23100", "대학원연구기관"),
    CODE_23101("23101", "대학원연구기관"),
    CODE_23200("23200", "대학부설연구기관"),
    CODE_23201("23201", "자연계대학부설연구기관"),
    CODE_23202("23202", "인문계대학부설연구기관"),
    CODE_24000("24000", "방산연구기관"),
    CODE_24100("24100", "방산연구기관"),
    CODE_24101("24101", "방산연구기관"),
    CODE_25000("25000", "(구)과기원"),
    CODE_25100("25100", "(구)과기원"),
    CODE_25101("25101", "(구)과기원"),
    CODE_26000("26000", "(구)학술특기자"),
    CODE_26100("26100", "(구)학술특기자"),
    CODE_26101("26101", "(구)학술특기자"),
    CODE_30000("30000", "승선근무예비역"),
    CODE_31000("31000", "수산업"),
    CODE_31100("31100", "수산업"),
    CODE_31101("31101", "수산업"),
    CODE_32000("32000", "해운업"),
    CODE_32100("32100", "해운업"),
    CODE_32101("32101", "해운업");

    private final String code;
    private final String type;

    public static BusinessCode from(final String code) {
        return Arrays.stream(values())
                .filter(value -> value.code.equals(code))
                .findFirst()
                .orElse(CODE_NOT_EXISTS);
    }
}
